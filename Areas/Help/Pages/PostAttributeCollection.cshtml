@page
@model woodgrovedemo.Help.Pages.PostAttributeCollectionModel

@{
    ViewData["Title"] = "Post attribute collection event";
    Layout = "_Layout";
}

<h1 style="margin-top: 25px; margin-bottom: 25px;">Validate sign-up attributes</h1>

<div>
    <p>
        The custom authentication extension supports the <a
            href="https://learn.microsoft.com/en-us/entra/identity-platform/custom-extension-attribute-collection?context=%2Fentra%2Fexternal-id%2Fcustomers%2Fcontext%2Fcustomers-context&tabs=start-continue%2Csubmit-continue"
            target="_blank" class="link-dark link-offset-2">on attribute collection submit</a> event.
        This event allows you to perform validation on attributes collected from the user during sign-up.

        This demo validates the <b>City</b> name against a list of <b>countries</b> compiled in the Woodgrove custom
        authentication
        extension REST API. Also, if the city contains <b>block</b>, Microsoft Entra ID will show <b>block page</b>.
        If the city contains <b>modify</b>, Microsoft Entra ID will modify some of the attributes (display name and
        city).
    </p>

    <div class="alert alert-light d-flex align-items-center" role="alert">
        <div>
            <i class="bi bi-github"></i> The <a target="_blank"
                href="https://github.com/microsoft/woodgrove-auth-api/blob/main/Controllers/OnAttributeCollectionSubmitController.cs">
                source code</a> for this demo is available in our
            <a href="https://github.com/microsoft/woodgrove-auth-api" target="_blank">Woodgrove authentication API
                GitHub
                repository</a>.
        </div>
    </div>
</div>


@await Html.PartialAsync("_HelpSelector.cshtml", 1)
<div class="tab-content wg-tab-content">
    <div class="tab-pane active" id="microsoftEntraAdminCenter" role="tabpanel"
        aria-labelledby="microsoftEntraAdminCenter-tab" tabindex="0">

        @await Html.PartialAsync("_StepsButtons.cshtml")

        <div class="bs-stepper vertical" id="Stepper">
            @await Html.PartialAsync("_Steps.cshtml", 9)

            <div class="bs-stepper-content">
                <div id="step-1" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger1">
                    @await Html.PartialAsync("_Prerequisites.cshtml")

                    <p>
                        Start by registering a custom authentication extension that is used by Microsoft Entra ID to
                        call
                        your REST API.
                        The custom authentication extension contains information about your REST API endpoint, the
                        attribute collection start action that it parses from your REST API, and how to
                        authenticate to your REST API.
                        Sign in to the <a href="https://entra.microsoft.com/" target="_blank"
                            class="link-dark link-offset-2">Microsoft Entra admin center</a>
                        and browse to <b>External Identities </b> > <b> Custom authentication extensions</b>.

                        Note, you can also browse to <b>Applications</b> > <b>Enterprise applications </b> > <b> Custom
                            authentication extensions </b>.

                        Then, select <b>Create a custom extension</b>.
                    </p>

                    <a href="#" class="pop" onclick="return false;">
                        <img class="img-fluid border"
                            src="~/Help/PostAttributeCollection/Select-custom-authentication-extensions.png">
                    </a>
                </div>

                <div id="step-2" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger2">
                    <p>
                        In <b>Basics</b>, select the <b>AttributeCollectionSubmit</b>
                        event, and then select <b>Next</b>.
                    </p>

                    <a href="#" class="pop" onclick="return false;">
                        <img class="img-fluid border"
                            src="~/Help/PostAttributeCollection/Create-custom-authentication-extension-1.png">
                    </a>
                </div>

                <div id="step-3" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger3">
                    <p>
                        In <b>Endpoint Configuration</b>, fill in the following properties:
                    <ul>
                        <li><b>Name</b> - A name for your custom authentication extension. For example, <i>
                                Validate sign-up user input</i>.</li>
                        <li><b>Target URL</b> - The URL of your REST API.</li>
                        <li><b>Timeout in milliseconds</b> - The maximum number of retries the API endpoint will be
                            called
                            in case of failure. If empty, will default to service default.</li>
                        <li><b>Maximum Retries</b> - The maximum number of retries the API endpoint will be called in
                            case
                            of failure. If empty, will default to service default..</li>
                        <li><b>Description</b> - A description for your custom authentication extensions.</li>
                    </ul>
                    To continue, select <b>Next</b>.
                    </p>

                    <a href="#" class="pop" onclick="return false;">
                        <img class="img-fluid border"
                            src="~/Help/PostAttributeCollection/Create-custom-authentication-extension-2.png">
                    </a>
                </div>

                <div id="step-4" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger4">
                    <p>
                        To ensure the communications between the custom authentication extension and your REST API are
                        secured appropriately, multiple security controls must be applied. The first step is to create
                        or
                        choose an application that Microsoft Entra ID uses the OAuth 2.0 client credentials grant flow
                        to
                        secure the
                        call to your API endpoint.
                    </p>
                    <p>
                        If this is your first custom authentication extension, see how we have configured
                        our <a href="~/help/TokenAugmentation">TokenIssuanceStart event</a>.

                        Since we already configured a custom authentication extension, in <b>API Authentication</b>,
                        choose the <b>Select an existing app registration in this directory</b> option.
                    </p>

                    <a href="#" class="pop" onclick="return false;">
                        <img class="img-fluid border"
                            src="~/Help/PostAttributeCollection/Create-custom-authentication-extension-3.png">
                    </a>
                </div>

                <div id="step-5" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger5">
                    <p>
                        Select the application you configured for the other custom authentication extensions, and choose
                        <b>Select</b>.
                    </p>

                    <a href="#" class="pop" onclick="return false;">
                        <img class="img-fluid border"
                            src="~/Help/PostAttributeCollection/Create-custom-authentication-extension-4.png">
                    </a>
                </div>

                <div id="step-6" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger6">
                    <p>
                        Review your configuration and select <b>Create</b>, which registers the custom authentication
                        extension and the associated application registration
                        you selected.
                    </p>

                    <a href="#" class="pop" onclick="return false;">
                        <img class="img-fluid border"
                            src="~/Help/PostAttributeCollection/Create-custom-authentication-extension-5.png">
                    </a>
                </div>

                <div id="step-7" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger7">
                    <p>
                        At this point the custom authenticate extension is configured in your tenant, but not in used in
                        any
                        of the sign-up pages.
                        Next you associate the custom authentication extension with one or more of your user flows.
                        To do so, browse to <b>Identity</b> > <b>External Identities</b> > <b>User flows</b>.
                        Then, select the user flow from the list.
                    </p>

                    <a href="#" class="pop" onclick="return false;">
                        <img class="img-fluid border" src="~/Help/PostAttributeCollection/Select-user-flow.png">
                    </a>
                </div>

                <div id="step-8" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger8">
                    <p>
                        From the menu, select <b>Custom authentication extensions</b>. To associate your custom
                        authentication
                        extension, select the <b>Before collecting information from the user</b> event.
                    </p>

                    <a href="#" class="pop" onclick="return false;">
                        <img class="img-fluid border"
                            src="~/Help/PostAttributeCollection/Add-custom-authentication-extension-to-user-flow-1.png">
                    </a>
                </div>

                <div id="step-9" role="tabpanel" class="bs-stepper-pane fade" aria-labelledby="steppertrigger9">
                    <p>
                        The custom extensions configured for the
                        <b>OnAttributeCollectionStart</b> event will be displayed.
                        Select one of them for the attribute collection start event, and then choose <b>Select</b> and
                        then
                        save the changes.
                    </p>

                    <div class="alert alert-success" role="alert">
                        <h4 class="alert-heading">Well done!</h4>
                        <p>You created a custom authentication extension type of <b>OnAttributeCollectionSubmit</b>.
                            Then
                            you associated it with your user flow. To check the user experience, sign-up to your
                            application.</p>
                    </div>


                    <a href="#" class="pop" onclick="return false;">
                        <img class="img-fluid border"
                            src="~/Help/PostAttributeCollection/Add-custom-authentication-extension-to-user-flow-2.png">
                    </a>
                </div>
            </div>
        </div>

    </div>

    <div class="tab-pane" id="microsoftGraph" role="tabpanel" aria-labelledby="microsoftGraph-tab" tabindex="0">
        <h4 class="graph-header graph-header-space">1. Register custom authentication extension application</h4>

        <p>
            If this is your first custom authentication extension, <a href="~/help/TokenAugmentation#graph">register the
                custom authentication extension application</a>.</a>.
        </p>

        <h4 class="graph-header graph-header-space">2. Register custom authentication extension</h4>

        <p>
            Next, you <a
                href="https://learn.microsoft.com/en-us/graph/api/identitycontainer-post-customauthenticationextensions?view=graph-rest-beta&tabs=http"
                target="_blank" class="link-dark link-offset-2">register the custom authentication extension</a>.
            You register the custom authentication extension by
            associating it with the <b>Custom authentication extension security app</b> you created, and to your
            REST API endpoint. Replace:
        <ul>
            <li><b>{app-ID}</b> with the app ID from the previous call <b>Custom authentication extension security
                    app</b>.</li>
            <li><b>{REST-API-domain}</b> with your rest API domain name</li>
            <li><b>{Endpoint-URL}</b> - with the RUL of your REST API endpoint</li>
        </ul>
        </p>

        <code
            style="color: black;"><span class="method">POST</span> https://graph.microsoft.com/beta/identity/customAuthenticationExtensions</code>
        <pre>
{
    "@@odata.type": "#microsoft.graph.onAttributeCollectionSubmitCustomExtension",
    "displayName": "Validate sign-up user input",
    "description": "Validate user input including the city name and may ask the user to correct the data or block the user",
    "behaviorOnError": null,
    "authenticationConfiguration": {
        "@@odata.type": "#microsoft.graph.azureAdTokenAuthentication",
        "resourceId": "api://<span class="highlight">{REST-API-domain}</span>/<span class="highlight">{app-ID}</span>"
    },
    "endpointConfiguration": {
        "@@odata.type": "#microsoft.graph.httpRequestEndpoint",
        "targetUrl": "<span class="highlight">{Endpoint-URL}</span>"
    },
    "clientConfiguration": {
        "timeoutInMilliseconds": null,
        "maximumRetries": null
    }
}
        </pre>


        <a class="btn btn-success btn-sm" data-bs-toggle="collapse" href="#collapseExample3" role="button"
            aria-expanded="false" aria-controls="collapseExample3">
            Show example
        </a>
        <div class="collapse example" id="collapseExample3">
            <code
                style="color: black;"><span class="method">POST</span> https://graph.microsoft.com/beta/identity/customAuthenticationExtensions</code>

            <pre class="example">
{
    "@@odata.type": "#microsoft.graph.onAttributeCollectionSubmitCustomExtension",
    "displayName": "Validate sign-up user input",
    "description": "Validate user input including the city name and may ask the user to correct the data or block the user",
    "behaviorOnError": null,
    "authenticationConfiguration": {
        "@@odata.type": "#microsoft.graph.azureAdTokenAuthentication",
        "resourceId": "api://auth-api.woodgrovedemo.com/12345678-1234-1234-1234-000000000000"
    },
    "endpointConfiguration": {
        "@@odata.type": "#microsoft.graph.httpRequestEndpoint",
        "targetUrl": "https://auth-api.woodgrovedemo.com/OnAttributeCollectionSubmit"
    },
    "clientConfiguration": {
        "timeoutInMilliseconds": null,
        "maximumRetries": null
    }
}
            </pre>
        </div>

        <h5 class="graph-header graph-header-space">2.1 Copy the custom authentication extension ID</h5>
        From the response, copy the value of the <b>id</b>. For example:
        <pre>
{
    "@@odata.context": "https://graph.microsoft.com/beta/$metadata#identity/customAuthenticationExtensions/$entity",
    "@@odata.type": "#microsoft.graph.onAttributeCollectionStartCustomExtension",
    "<span class="highlight">id</span>": "22222222-2222-3333-3333-444444444444",
    "displayName": "Prepopulate sign-up attributes",
    "description": "Prepopulate sign-up attributes from a REST API",
}
        </pre>


        <h5 class="graph-header graph-header-space">2.2 Link the custom authentication extension to a user flow</h5>
        <p>
            <a href="https://learn.microsoft.com/en-us/graph/api/authenticationeventsflow-update?view=graph-rest-beta&tabs=http"
                target="_blank" class="link-dark link-offset-2">Update your user flow</a>.

            In the next JSON, replace:
        <ul>
            <li><b>{user-flow-ID}</b> with your <a
                    href="https://learn.microsoft.com/en-us/graph/api/identitycontainer-list-authenticationeventsflows?view=graph-rest-beta&tabs=http"
                    target="_blank" class="link-dark link-offset-2">user flow ID</a>.</li>
            <li><b>{Custom-auth-extension-ID}</b> with the custom authentication extension you just created.</li>
        </ul>
        </p>
        <code
            style="color: black;"><b>PUT</b> https://graph.microsoft.com/beta/identity/authenticationEventsFlows/<span class="highlight">{user-flow-ID}</span>/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollectionSubmit/microsoft.graph.onAttributeCollectionSubmitCustomExtensionHandler/customExtension/$ref</code>

        <pre>
{
    "@@odata.id": "https://graph.microsoft.com/beta/identity/customAuthenticationExtensions/<span class="highlight">{Custom-auth-extension-ID}</span>"
}
        </pre>


        <a class="btn btn-success btn-sm" data-bs-toggle="collapse" href="#collapseExample3" role="button"
            aria-expanded="false" aria-controls="collapseExample3">
            Show example
        </a>
        <div class="collapse example" id="collapseExample3">
            <code
                style="color: black;"><b>PUT</b> https://graph.microsoft.com/beta//identity/authenticationEventsFlows/44444444-4444-4444-4444-445555555555/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollectionSubmit/microsoft.graph.onAttributeCollectionSubmitCustomExtensionHandler/customExtension/$ref</code>

            <pre class="example">
{
    "@@odata.id": "https://graph.microsoft.com/beta/identity/customAuthenticationExtensions/44444444-2222-3333-3333-444444444444"
}
            </pre>
        </div>
    </div>

    <div class="tab-pane" id="entraGraphPowerShell" role="tabpanel" aria-labelledby="entraGraphPowerShell-tab"
        tabindex="0">
        Loading...
    </div>
</div>